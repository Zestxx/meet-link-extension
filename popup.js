document.addEventListener('DOMContentLoaded', function() {
    const generateBtn = document.getElementById('generateBtn');
    const resultContainer = document.getElementById('result');
    const meetLinkInput = document.getElementById('meetLink');
    const copyBtn = document.getElementById('copyBtn');
    const openBtn = document.getElementById('openBtn');
    const newBtn = document.getElementById('newBtn');


    // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    function showResult(link) {
        meetLinkInput.value = link;
        resultContainer.style.display = 'block';
        generateBtn.style.display = 'none';
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        resultContainer.style.opacity = '0';
        resultContainer.style.transform = 'translateY(10px)';
        setTimeout(() => {
            resultContainer.style.opacity = '1';
            resultContainer.style.transform = 'translateY(0)';
        }, 10);
    }

    // –°–∫—Ä—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    function hideResult() {
        resultContainer.style.display = 'none';
        generateBtn.style.display = 'flex';
    }

    // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    async function copyToClipboard(text) {
        try {
            await navigator.clipboard.writeText(text);
            showCopySuccess();
        } catch (err) {
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
            const textArea = document.createElement('textarea');
            textArea.value = text;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
            showCopySuccess();
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏
    function showCopySuccess() {
        const tooltip = document.getElementById('copy-tooltip');
        tooltip.textContent = 'Copied!';
        tooltip.classList.add('show');
        tooltip.style.display = 'block';
        setTimeout(() => {
            tooltip.classList.remove('show');
            setTimeout(() => { tooltip.style.display = 'none'; }, 300);
        }, 2000);
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –≤—Å—Ç—Ä–µ—á–∏ –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
    function openMeet(link) {
        chrome.tabs.create({ url: link });
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
    function showLoading() {
        generateBtn.textContent = 'Creating...';
        generateBtn.disabled = true;
        generateBtn.style.opacity = '0.7';
    }

    // –°–∫—Ä—ã—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
    function hideLoading() {
        generateBtn.textContent = 'Generate Meet Link';
        generateBtn.disabled = false;
        generateBtn.style.opacity = '1';
    }

    // –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏
    function generateMeetLink() {
        showLoading();
        
        chrome.runtime.sendMessage({ action: 'generateMeetLink' }, function(response) {
            hideLoading();
            
            if (response && response.meetLink) {
                // –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                showResult(response.meetLink);
                copyToClipboard(response.meetLink);
                playSuccessSound();
            } else if (response && response.error === 'not_authenticated') {
                // –ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –æ—Ç–∫—Ä—ã–≤–∞–µ–º Google –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
                chrome.tabs.create({ url: 'https://accounts.google.com/ServiceLogin?service=mail', active: true });
                showError('Please sign in to Google and try again.');
            } else if (response && response.error === 'need_permissions') {
                // –ù—É–∂–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
                showPermissionsDialog();
            } else {
                // –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
                showError('Error generating link. Please try again.');
            }
        });
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
    function showError(message) {
        resultContainer.innerHTML = `
            <div style="text-align: center; padding: 20px; color: #d93025;">
                <div style="font-size: 14px; margin-bottom: 15px;">${message}</div>
                <button id="retryBtn" class="action-btn retry-btn">Try Again</button>
            </div>
        `;
        resultContainer.style.display = 'block';
        generateBtn.style.display = 'none';
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        resultContainer.style.opacity = '0';
        resultContainer.style.transform = 'translateY(10px)';
        setTimeout(() => {
            resultContainer.style.opacity = '1';
            resultContainer.style.transform = 'translateY(0)';
        }, 10);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–≤—Ç–æ—Ä–∞
        document.getElementById('retryBtn').addEventListener('click', function() {
            hideResult();
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    generateBtn.addEventListener('click', function() {
        // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É
        generateMeetLink();
    });

    copyBtn.addEventListener('click', function() {
        copyToClipboard(meetLinkInput.value);
    });

    openBtn.addEventListener('click', function() {
        openMeet(meetLinkInput.value);
    });

    newBtn.addEventListener('click', function() {
        hideResult();
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    meetLinkInput.addEventListener('keydown', function(e) {
        if (e.key === 'Enter') {
            copyToClipboard(meetLinkInput.value);
        }
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    generateBtn.addEventListener('mouseenter', function() {
        this.style.transform = 'scale(1.02)';
    });

    generateBtn.addEventListener('mouseleave', function() {
        this.style.transform = 'scale(1)';
    });

    // –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º
    function showPermissionsDialog() {
        const permissionsHtml = `
            <div class="permissions-dialog">
                <div class="permissions-header">
                    <svg width="20" height="20" style="color: #1a73e8; margin-right: 6px;" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                    </svg>
                    Setup Permissions
                </div>
                <div class="permissions-text">
                    <p><b>Step 1:</b> Click "Open Google Meet" below</p>
                    <p><b>Step 2:</b> Allow camera and microphone access</p>
                    <p><b>Step 3:</b> Return here and click "Create Link"</p>
                    <p style="font-size: 11px; color: #666; margin-top: 8px;">üí° Only needed once</p>
                </div>
                <div class="permissions-actions">
                    <button id="openMeetBtn" class="action-btn open-meet-btn">Open Google Meet</button>
                    <button id="createLinkBtn" class="action-btn retry-btn">Create Link</button>
                </div>
            </div>
        `;
        
        resultContainer.innerHTML = permissionsHtml;
        resultContainer.style.display = 'block';
        generateBtn.style.display = 'none';
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        resultContainer.style.opacity = '0';
        resultContainer.style.transform = 'translateY(10px)';
        setTimeout(() => {
            resultContainer.style.opacity = '1';
            resultContainer.style.transform = 'translateY(0)';
        }, 10);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "Open Google Meet"
        document.getElementById('openMeetBtn').addEventListener('click', function() {
            chrome.tabs.create({ url: 'https://meet.google.com/new', active: true });
            this.textContent = '‚úì Tab opened';
            this.style.background = '#34A853';
            this.disabled = true;
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É"
        document.getElementById('createLinkBtn').addEventListener('click', function() {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
            this.classList.add('loading');
            this.disabled = true;
            
            chrome.runtime.sendMessage({ action: 'generateMeetLink' }, function(response) {
                if (response && response.meetLink) {
                    showResult(response.meetLink);
                    copyToClipboard(response.meetLink);
                    playSuccessSound();
                } else if (response && response.error === 'not_authenticated') {
                    chrome.tabs.create({ url: 'https://accounts.google.com/ServiceLogin?service=mail', active: true });
                    showError('Please sign in to Google and try again.');
                } else if (response && response.error === 'need_permissions') {
                    showError('Please allow camera and microphone access in Google Meet and try again.');
                } else {
                    showError('Error generating link. Please try again.');
                }
            });
        });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    function playSuccessSound() {
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç
        // const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBSuBzvLZiTYIG2m98OScTgwOUarm7blmGgU7k9n1unEiBC13yO/eizEIHWq+8+OWT');
        // audio.play();
    }
}); 